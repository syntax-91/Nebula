// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url = "file:./dev.db"
}

model User {
  
  id Int @id @default(autoincrement())

  displayName String?
  username String @unique
  password String
  createdAt DateTime @default(now())
  ava String

  likedPosts LikedPost[]
  dislikedPosts DislikedPost[]

  following Follow[] @relation("Following") // Те, на кого подписаны МЫ
  followers Follow[] @relation("Followers") // Те, кто подписан на НАС

  posts Post[]
}



model Follow {

  followerId Int @unique
  followingId Int @unique

  follower User @relation("Following",fields: [followerId], references: [id])
  followers User @relation("Followers",fields: [followingId], references: [id])
}

model Post {
  
  id Int @id @default(autoincrement())
    
  ownerUsername String? 
  owner User? @relation(fields: [ownerUsername], references: [username])

  likedBy LikedPost[]
  dislikedBy DislikedPost[]

  text String
  createdAt DateTime @default(now())

}

model LikedPost {

  // перепиши потом на userId
  username String 
  postId Int 

  user User @relation(fields: [username], references: [username])
  post Post @relation(fields: [postId], references: [id])

  @@id([username,postId])
}


model DislikedPost {

  // перепиши потом на userId
  username String 
  postId Int 

  user User @relation(fields: [username], references: [username])
  post Post @relation(fields: [postId], references: [id])

  @@id([username,postId])
}

model Bug {
  id Int @id @default(autoincrement())

  text String
  ownerUsername String
}